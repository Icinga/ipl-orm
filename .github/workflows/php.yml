name: PHP Tests

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Static analysis for php ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3', '8.4']
        os: ['ubuntu-latest']

    steps:
      - name: Checkout code base
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, pdo_sqlite
          tools: phpcs

      - name: Setup dependencies
        run: composer require -n --no-progress overtrue/phplint

      - name: PHP Lint
        if: ${{ ! cancelled() }}
        run: ./vendor/bin/phplint -n --exclude={^vendor/.*} ${{ matrix.phplint_options }} -- .

      - name: PHP CodeSniffer
        if: ${{ ! cancelled() }}
        run: phpcs -wps --colors

  test:
    name: Unit tests with php ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      phpunit-version: 9.5

    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3', '8.4']
        os: ['ubuntu-latest']

    services:
      mysql:
        image: mariadb
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: icinga_unittest
          MYSQL_USER: icinga_unittest
          MYSQL_PASSWORD: icinga_unittest
        options: >-
          --health-cmd "mariadb -s -uroot -proot -e'SHOW DATABASES;' 2> /dev/null | grep icinga_unittest > test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306/tcp

      pgsql:
        image: postgres
        env:
          POSTGRES_USER: icinga_unittest
          POSTGRES_PASSWORD: icinga_unittest
          POSTGRES_DB: icinga_unittest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp

    steps:
      - name: Checkout code base
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, pdo_sqlite
          tools: phpunit:${{ matrix.phpunit-version || env.phpunit-version }}

      - name: Setup dependencies
        run: composer install -n --no-progress

      - name: PHPUnit
        env:
          MYSQL_TESTDB: icinga_unittest
          MYSQL_TESTDB_HOST: 127.0.0.1
          MYSQL_TESTDB_PORT: ${{ job.services.mysql.ports['3306'] }}
          MYSQL_TESTDB_USER: icinga_unittest
          MYSQL_TESTDB_PASSWORD: icinga_unittest
          PGSQL_TESTDB: icinga_unittest
          PGSQL_TESTDB_HOST: 127.0.0.1
          PGSQL_TESTDB_PORT: ${{ job.services.pgsql.ports['5432'] }}
          PGSQL_TESTDB_USER: icinga_unittest
          PGSQL_TESTDB_PASSWORD: icinga_unittest
        run: phpunit --verbose
